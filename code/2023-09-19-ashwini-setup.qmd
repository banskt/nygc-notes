---
title: Setup Ashwini
---

Running documentation for the server setup in Ashwini.

## Update OS

```
sudo apt update
sudo apt upgrade
sudo reboot
sudo apt install vim build-essential git
```

## Internet Connection
  - Check ethernet name:
  ```
  ip -d address
  ```
  - Create configuration in `/etc/netplan/01-netcfg.yaml`.
```
network:
  version: 2
  renderer: networkd
  ethernets:
    ens18:
      dhcp4: false
      addresses: [109.122.221.228/25]
      gateway4: 109.122.221.129
      nameservers:
        addresses: [8.8.8.8,8.8.4.4]
      dhcp6: false
```
  - Apply configuration
  ```
  sudo netplan --debug apply
  ```
  - Ping local IP and external IP to check
  ```
  ping xxx.xxx.xxx.xxx
  ping google.com
  ```

## SSH Security

  - Select a port to change the default SSH Port. 
  Do not choose a port already in use.
  Ports from 0 to 1023 are reserved and should not be used. Choose a port greater than 1023 and less than 65535. Check using:
  ```
  ss
  ss - tulpn
  ```
  - Change the following relevant lines in `/etc/ssh/sshd_config`
  ```
  # Change protocol
  Protocol 2
  # 
  Port xxxxx
  LogLevel VERBOSE
  PermitRootLogin no
  # trusted hosts are still considered a security risk
  HostbasedAuthentication no
  IgnoreRhosts yes
  # do not allow eavesdropping
  PermitEmptyPasswords no
  AllowTcpForwarding no
  X11Forwarding no
  # last login info can provide available users to hackers
  PrintLastLog no
  ```
  Save the file and restart SSH service.
  ```
  sudo systemctl restart ssh
  sudo systemctl status ssh
  ```
  - Open the port in firewall
  ```
  sudo apt install ufw
  sudo ufw app list
  sudo ufw status verbose
  sudo ufw allow xxxxx/tcp # enter the SSH port here
  sudo ufw enable
  sudo ufw status verbose
  ```
  - Set up `~/.ssh/config` and SSH key on the client side.
  - Check if SSH is working!

## Add Swap Memory

```
sudo -i
dd if=/dev/zero of=/swapfile bs=1024 count=1048576 #1GB: 1024 x 1024 = 1048576
chmod 0600 /swapfile
mkswap /swapfile
swapon /swapfile
echo "/swapfile none swap sw 0 0" >> /etc/fstab
swapon -s
free -m
```

## Mount Hard Disks

  - Check existing partitions and harddisks
  ```
  sudo lsblk
  sudo fdisk -l
  sudo lshw -C disk
  ```
  - Partition using `parted`.
  - Create entry in `etc/fstab`. You can check all uuid from `ls -lh /dev/disk/by-uuid/`
  or individually from `sudo blkid /dev/sdb1`
  ```
  # /dev/sdb1 --> /opt
  /dev/disk/by-uuid/xxxx /opt ext4 defaults 0 2
  # /dev/sdb2 --> ~/local
  /dev/disk/by-uuid/xxxx /home/banskt/local ext4 rw,suid,dev,exec,auto,user,async 0 2
  # /dev/sdb3 --> ~/data
  /dev/disk/by-uuid/xxxx /home/banskt/data ext4 rw,suid,dev,exec,auto,user,async 0 2
  ```
  - After mounting you have to change the ownership of the directories, if required.
  - Reboot and check if the partitions are mounted automatically.


## Bash

Install [dotfiles from Github](https://github.com/banskt/dotfiles).
But, I did not want to install everything from `.dotfiles`. 
So, I made a `dryrun` to import the functions and link individual dotfiles.
```
git clone https://github.com/banskt/dotfiles.git ~/.dotfiles
source ~/.dotfiles/install dryrun
DRYRUN=false
backup_and_link .bashrc bash/bashrc
backup_and_link .vimrc vim/vimrc
backup_and_link .vim vim/dotvim
cp ~/.dotfiles/git/gitconfig ~/.gitconfig
cp ~/.dotfiles/ssh/config ~/.ssh/
chmod 600 ~/.ssh/config
```
I edited the `.ssh/config` file and kept configurations for Github, vultr and feral.
I edited the `.gitconfig` to include my email.
Logout and login for the changes to take effect.

Finally, create SSH keys for Github and connect!
```
cd ~/.ssh
ssh-keygen -t ed25519 -f github_key
```
